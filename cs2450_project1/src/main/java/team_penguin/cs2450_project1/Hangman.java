/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package team_penguin.cs2450_project1;

/**
 *
 * @author acer
 */

import java.awt.event.ActionListener;
import java.awt.event.ActionEvent;
import java.text.SimpleDateFormat;
import java.util.Random;
import java.util.ArrayList;
import java.util.Date;
import javax.swing.Action;
import javax.swing.Timer;



public class Hangman extends javax.swing.JFrame {

    /**
     * Creates new form Hangman
     */
    
    public static String hangmanWord()
    {
        //Random number generator
        Random rand = new Random();
        // List of possible hangman words
        String[] words = {"abstract", "cemetery", "nurse", "pharmacy", "climbing"};
        // random select a position 
        return words[rand.nextInt(words.length)];
    }
    public static <T> void printAry(T[] ary)
    {
        for(int i = 0; i < ary.length; i++)
        {
            System.out.print(ary[i] + ", ");
        }
        System.out.print("\n");
    }
    public static void init(Integer[] ary)
    {
        for(int i = 0; i < ary.length; i++)
        {
            ary[i] = 0;
        }
    }
    public static Integer[] mark(Integer[] ary, ArrayList<Integer> position)
    {
        for(int i = 0; i < position.size(); i++)
        {
            ary[position.get(i)]=1;
        }
        return ary;
    }
    public static ArrayList<Integer> search(String word, char alphabet)
    {
        ArrayList<Integer> positions = new ArrayList<Integer>();
        for(int i = 0; i < word.length(); i++)
        {
            if(word.charAt(i) == alphabet)
            {
                positions.add(i);
            }
        }
        return positions;
    }
    
    public Hangman() {
        initComponents();
        
        //Set the height and width of window screen and do not let user to change the size
        setSize(600,400);
        setLocation(300,200);
        setResizable(false);
        
        //date and time
        showDate();
        showTime();
       
        //Select a word for guess
        //String word = hangmanWord();
        String word = "abstract";
        System.out.println(word);
        
        //Guess array
        Integer[] guess = new Integer[word.length()];
        //Initialize to 0
        init(guess);
        
        // Test mark
        mark(guess,search(word,'a'));
        
        //Testing print out
        printAry(guess);
        
    }
    // Methods to show Time and Date
    void showDate(){
        Date d = new Date();
        SimpleDateFormat f = new SimpleDateFormat("yyyy/MM/dd");
        Date.setText(f.format(d));
    }
    
    void showTime(){
        new Timer(0, new ActionListener(){
            
            @Override
            public void actionPerformed(ActionEvent e) {
               Date d = new Date();
               SimpleDateFormat f = new SimpleDateFormat("hh:mm:ss a");
               Time.setText(f.format(d));
            }
        }).start();
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        skipButton = new javax.swing.JButton();
        Date = new javax.swing.JLabel();
        Time = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(600, 400));
        getContentPane().setLayout(null);

        skipButton.setText("Skip");
        skipButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                skipButtonActionPerformed(evt);
            }
        });
        getContentPane().add(skipButton);
        skipButton.setBounds(320, 210, 53, 23);

        Date.setFont(new java.awt.Font("Stencil", 0, 13)); // NOI18N
        Date.setText("Date");
        getContentPane().add(Date);
        Date.setBounds(20, 10, 140, 41);

        Time.setFont(new java.awt.Font("Stencil", 0, 13)); // NOI18N
        Time.setText("Time");
        getContentPane().add(Time);
        Time.setBounds(240, 0, 150, 60);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void skipButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_skipButtonActionPerformed
        // TODO add your handling code here:
        MenuScreen ms = new MenuScreen();
        ms.setVisible(true);
        dispose();
        
    }//GEN-LAST:event_skipButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Hangman.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Hangman.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Hangman.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Hangman.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Hangman().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Date;
    private javax.swing.JLabel Time;
    private javax.swing.JButton skipButton;
    // End of variables declaration//GEN-END:variables
}
